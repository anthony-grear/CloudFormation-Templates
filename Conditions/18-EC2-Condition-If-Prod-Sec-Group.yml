AWSTemplateFormatVersion: 2010-09-09
Description: demo for Conditions Fn::If prod env sec group 1, if dev sec group 2

Parameters:
  MyKeyName:
    Description: Select a key pair.
    Type: AWS::EC2::KeyPair::KeyName
  EnvironmentName:
    Description: Select the environment.
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: Must be development or production.

Mappings:
  MyRegionMap:
    us-east-1:
      HVM64: ami-0dc2d3e4c0f9ebd18 
    us-east-2:
      HVM64: ami-0233c2d874b811deb
  MyEnvironmentMap:
    dev:
      instanceType: t2.micro
    prod:
      instanceType: t2.small

Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]
  CreateDevSecurityGroup: !Equals [!Ref EnvironmentName, dev]
  CreateProdSecurityGroup: !Equals [!Ref EnvironmentName, prod]

Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MyRegionMap
        - !Ref 'AWS::Region'
        - HVM64
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - !Ref EnvironmentName
        - instanceType
      KeyName: !Ref MyKeyName
      SecurityGroups: !If [CreateDevSecurityGroup, [!Ref DevEnvSecurityGroup], [!Ref ProdEnvSecurityGroup]]
  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties: 
      InstanceId: !Ref MyVMInstance
  DevEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: Dev SSH from anywhere
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
  ProdEnvSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: Prod SSH from anywhere
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
