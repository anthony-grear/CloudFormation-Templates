AWSTemplateFormatVersion: 2010-09-09
Description: demo InstanceId as Output

Parameters:
  MyKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select a key pair.
  EnvironmentName:
    Description: Select an environment.
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: You must select development or production.
Mappings:
  MyRegionMap:
    us-east-1:
      HVM64: ami-0dc2d3e4c0f9ebd18
    us-east-2:
      HVM64: ami-0233c2d874b811deb
  MyEnvironmentMap:
    dev: 
      instanceType: t2.micro
    prod:
      instanceType: t2.small

Conditions:
  CreateDevSecurityGroup: !Equals [!Ref EnvironmentName, dev]

Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MyRegionMap
        - !Ref 'AWS::Region'
        - HVM64
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - !Ref EnvironmentName
        - instanceType
      KeyName: !Ref MyKeyName
      SecurityGroups: !If [CreateDevSecurityGroup, [!Ref MyDevGlobalSecurityGroup], !Ref 'AWS::NoValue']
         
  
  MyDevGlobalSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDevSecurityGroup
    Properties:
      GroupDescription: Dev SSH Inbound from anywhere.
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

Outputs:
  MyInstanceId:
    Description: My instance id.
    Value: !Ref MyVMInstance
  MyDNSName:
    Description: MyPublic DNS Name
    Value: !GetAtt MyVMInstance.PublicDnsName
  MyInstanceAvailabilityZone:
    Description: Instance Availability Zone
    Value: !GetAtt MyVMInstance.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-InstanceAz"
  MyDevGlobalSecurityGroup:
    Description: My Dev SG
    Value: !Ref MyDevGlobalSecurityGroup
    Condition: CreateDevSecurityGroup
    Export:
      Name: !Join [":", [!Ref 'AWS::StackName', MyDevSSHGlobalSG]]